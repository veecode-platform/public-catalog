apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: Ingress_stack
  title: Ingress Stack
  description: Ingress Template using External-DNS, Cert-Manager and Nginx Ingress Controller
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - platform-templates
    - vkpr
    - nginx
    - external-dns
    - cert-manager
    - aws
spec:
  owner: veecode/platform
  type: devops
  parameters:
       ### Project Configuration
    - title: Project Configuration
      required:
        - componentId
        - owner
      properties:
        componentId:
          title: Project name
          type: string
          description: Name of the project
          pattern: '^([a-z0-9]|[.]|[_]|[-])*$'
          ui:autofocus: true
          ui:field: EntityNamePicker
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

     ### Access Configuration
    - title: Access Configuration
      required:
        - cluster_name
        - domain
        - email
        - nginx
        - cert_manager
      properties:
        cluster_name:
          title: Cluster Name
          type: string
          description: Specifies the Cluster
        domain:
          title: Domain in Route53
          type: string
          description: Specifies the Domain on AWS Route53
        email:
          title: Email 
          type: string
          description: Specifies the email to receive certificate notifications
        nginx:
          title: Enable Nginx
          type: string
          description: Enable Nginx
          default: "false"
          enum:
            - "true"
            - "false"
        cert_manager:
          title: Specifies the cert_manager issuer type
          type: string
          description: Specifies the Cert_Manager issuer type.
          default: "staging"
          enum:
            - "staging"
            - "production"
     ### Location Configuration
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          description: Choose a location to create the Access Stack Pipeline
          ui:field: RepoUrlSelector
          ui:options:
            allowedHosts:
              - github.com
              - gitlab.com

        visibility:
          title: Repository visibility
          type: string
          enum:
            - public
            - private
          enumNames:
            - 'Public'
            - 'Private'
          default: private
          
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton      
        values:
          cluster_name: ${{ parameters.cluster_name }}
          domain: ${{ parameters.domain }}
          email: ${{ parameters.email }}
          specPublish: ${{ (parameters.specPublish | parseRepoUrl).owner }}/${{ (parameters.specPublish | parseRepoUrl).repo }}
          specPublishRepo: ${{ (parameters.specPublish | parseRepoUrl).repo }}
          specPublishBranch: ${{ parameters.specPublishBranch }}
          specTags: ${{ parameters.specTags }}
          owner: ${{ parameters.owner }}
          repoUrl: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          componentId: ${{ parameters.componentId }}
          nginx: ${{ parameters.nginx }}
          cert_manager: ${{ parameters.cert_manager }}

    # check github
    - name: Check Github Provider
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === "github.com" }} 
      action: fs:delete
      input:
        files: 
          - ./.gitlab-ci.yml 
    # check gitlab
    - name: Check Gitlab Provider
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === "gitlab.com" }} 
      action: fs:delete
      input:
        files:
          - ./.github
  
    - id: publish
      name: Publish in Github
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "github.com" }} 
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.componentId }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}
      
    - id: publish
      name: Publish in Gitlab
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "gitlab.com" }}
      action: publish:gitlab
      input:
        allowedHosts:
          - gitlab.com
        description: This is ${{ parameters.componentId }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }} 

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
