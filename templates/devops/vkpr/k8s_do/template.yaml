apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-k8s-do-template
  title: Provision k8s Cluster Digital Ocean
  description: Provision k8s Cluster Digital Ocean
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - platform-templates
    - k8s
    - terraform
spec:
  owner: veecode/platform
  type: devops
  parameters:
    - title: K8S DO Configuration
      required:
        - cluster_name
        - k8s_version
        - k8s_region
        - instance_type_admin
        - default_quantity
        - node_quantity
        - max_node_quantity
        - owner
      properties:
        cluster_name:
          title: k8S Cluster name
          type: string
          description: Specifies the K8S Cluster name
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        k8s_version:
          title: Kubernetes Version
          type: string
          description: Specifies the Kubernetes Version
          default: "1.27"
          enum:
            - "1.28"
            - "1.27"
            - "1.26"
            - "1.25"
            - "1.24"
        k8s_region:
          title: Cluster Region
          type: string
          description: Specifies the Cluster region
          default: 'nyc3'
          enum:
            - 'nyc1'
            - 'nyc3'
            - 'ams3'
            - 'sfo2'
            - 'sfo3'
          enumNames:
            - '(nyc1) New York City, United States'
            - '(nyc3) New York City, United States'
            - '(ams3) Amsterdam, the Netherlands'
            - '(sfo2) San Francisco, United States'
            - '(sfo3) San Francisco, United States'
        instance_type_admin:
          title: Admin Node instance type 
          type: string
          description: Specifies the K8S Admin Node instance type
          default: s-2vcpu-4gb
          enum:
            - s-1vcpu-2g
            - s-2vcpu-4gb
            - s-4vcpu-8gb
            - s-6vcpu-16gb
          enumNames:
            - "s-1vcpu-2g(vCPU:1, Mem: 2Gib)"
            - "s-2vcpu-4gb (vCPU:2, Mem: 4Gib)"
            - "s-4vcpu-8gb (vCPU:4, Mem: 8Gib)"
            - "s-6vcpu-16gb (vCPU:6, Mem: 26Gib)"
        default_quantity:
          title: Admin Quantity
          type: number
          description: Specifies the Admin Node Group quantity
          default: 1
        instance_type_node:
          title: Node instance type 
          type: string
          description: Specifies the K8S Node instance type
          default: s-2vcpu-4gb
          enum:
            - s-1vcpu-2g
            - s-2vcpu-4gb
            - s-4vcpu-8gb
            - s-6vcpu-16gb
          enumNames:
            - "s-1vcpu-2g(vCPU:1, Mem: 2Gib)"
            - "s-2vcpu-4gb (vCPU:2, Mem: 4Gib)"
            - "s-4vcpu-8gb (vCPU:4, Mem: 8Gib)"
            - "s-6vcpu-16gb (vCPU:6, Mem: 26Gib)"
        node_quantity:
          title: Node Quantity
          type: number
          description: Specifies the Node Group quantity
          default: 1
        max_node_quantity:
          title: Max Node Quantity
          type: number
          description: Specifies the Node Group max quantity
          default: 3
        
    - title: Terraform Cloud Configuration
      required:
        - tf_organization
        - tf_workspace
      properties:
        tf_organization:
          title: Terraform Cloud Organization
          type: string
          description: Specifies your Terraform Cloud Organization

        tf_workspace:
          title: Terraform Cloud Workspace
          type: string
          description: Specifies your Terraform Cloud Workspace
          
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          description: Choose a location to create the EKS Cluster Pipeline
          ui:field: RepoUrlSelector
        visibility:
          title: Repository visibility
          type: string
          enum:
            - public
            - private
          enumNames:
            - 'Public'
            - 'Private'
          default: private

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton      
        values:
          cluster_name: ${{ parameters.cluster_name }}
          owner: ${{ parameters.owner }}
          k8s_version: ${{ parameters.k8s_version }}
          k8s_region: ${{ parameters.k8s_region }}
          instance_type_admin: ${{ parameters.instance_type_admin }}
          default_quantity: ${{ parameters.default_quantity }}
          instance_type_node: ${{ parameters.instance_type_node }}
          node_quantity: ${{ parameters.node_quantity }}
          max_node_quantity: ${{ parameters.max_node_quantity }}
          tf_organization: ${{ parameters.tf_organization }}
          tf_workspace: ${{ parameters.tf_workspace }}
          destination: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          host: ${{ (parameters.repoUrl | parseRepoUrl).host }}
          repoUrl: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          
    - name: Check Github Provider
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "github.com" }} 
      action: fs:delete
      input:
        files:
          - ./.gitlab-ci.yml

    - name: Check Gitlab Provider
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === "gitlab.com" }} 
      action: fs:delete
      input:
        files:
          - ./.github
    
    - id: publish
      name: Publish in github
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "github.com" }}  
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: Cluster ${{ parameters.cluster_name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}

    - id: publish
      name: Publish in gitlab
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "gitlab.com"  }} 
      action: publish:gitlab
      input:
        allowedHosts: ["gitlab.com"]
        description: Cluster k8s ${{ parameters.cluster_name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}
    
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
        
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
  
  
