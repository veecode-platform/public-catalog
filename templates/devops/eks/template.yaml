apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-eks-template
  title: Provision EKS Cluster
  description: Provision EKS Cluster using Terraform
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - platform-templates
    - k8s
    - eks
    - terraform
spec:
  owner: veecode/platform
  type: devops
  parameters:
    - title: EKS Configuration
      required:
        - eks_cluster_name
        - capacity_type
        - instance_type
        - node_quantity
        - max_node_quantity
        - owner
      properties:
        eks_cluster_name:
          title: EKS Cluster name
          type: string
          pattern: '^([a-z0-9]|[.]|[_]|[-])*$'
          description: Specifies the EKS Cluster name
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        k8s_version:
          title: Kubernetes Version
          type: string
          description: Specifies the EKS Kubernetes Version
          default: "1.27"
          enum:
            - "1.27"
            - "1.26"
            - "1.25"
            - "1.24"
        instance_type:
          title: Node instance type
          type: string
          description: Specifies the EKS Node instance type
          default: t3.small
          enum:
            - t3.small
            - m5.large
            - m5.xlarge
            - t4g.small
            - m6g.large
            - m6g.xlarge
          enumNames:
            - "t3.small (vCPU:2, Mem: 2Gib)"
            - "m5.large (vCPU:2, Mem: 8Gib)"
            - "m5.xlarge (vCPU:4, Mem: 16Gib)"
            - "t4g.small (vCPU:2, Mem: 2Gib)"
            - "m6g.large (vCPU:2, Mem: 8Gib) ARM"
            - "m6g.xlarge (vCPU:4, Mem: 16Gib) ARM"
        capacity_type:
          title: Purchasing option
          type: string
          description: Specifies the Node Group purchasing option
          default: SPOT
          enum:
            - 'ON_DEMAND'
            - 'SPOT'
          enumNames:
            - 'On demand'
            - 'Spot Instance'
            
        node_quantity:
          title: Node Quantity
          type: number
          description: Specifies the Node Group quantity
          default: 3
        max_node_quantity:
          title: Max Node Quantity
          type: number
          description: Specifies the Node Group max quantity
          default: 3
        
    - title: Terraform Configuration
      required:
        - terraformStateBucketName
        - terraformStateBucketRegion
      properties:
        terraformStateBucketName:
          title: Terraform State Bucket Name
          type: string
          description: Specifies your Terraform State Bucket

        terraformStateBucketRegion:
          title: Bucket Region
          type: string
          description: Specifies the Terraform State Bucket region
          default: 'us-east-1'
          enum:
            - 'us-east-2'
            - 'us-east-1'
            - 'us-west-1'
            - 'us-west-2'
          enumNames:
            - 'US East (Ohio)'
            - 'US East (N. Virginia)'
            - 'US West (N. California)'
            - 'US West (Oregon)'
          
        infracost:
          title: Enable Infracost Estimate
          type: boolean
          default: false

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          description: Choose a location to create the EKS Cluster Pipeline
          ui:field: RepoUrlSelector
        visibility:
          title: Repository visibility
          type: string
          enum:
            - public
            - private
          enumNames:
            - 'Public'
            - 'Private'
          default: private

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton      
        values:
          eks_cluster_name: ${{ parameters.eks_cluster_name }}
          k8s_version: ${{ parameters.k8s_version }}
          instance_type: ${{ parameters.instance_type }}
          capacity_type: ${{ parameters.capacity_type }}
          node_quantity: ${{ parameters.node_quantity }}
          max_node_quantity: ${{ parameters.max_node_quantity }}
          terraformStateBucketName: ${{ parameters.terraformStateBucketName }}
          destination: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          owner: ${{ parameters.owner }}
          terraformStateBucketRegion: ${{ parameters.terraformStateBucketRegion }}
          host: ${{ (parameters.repoUrl | parseRepoUrl).host }}
          infracost: ${{ parameters.infracost }}
          repoUrl: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
    
    - name: Check Infracost
      if: ${{ parameters.infracost === false }}
      action: fs:delete
      input:
        files: 
          - ./.github/workflows/infracost.yml

    - name: Check Github Provider
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "github.com" }} 
      action: fs:delete
      input:
        files:
          - ./.gitlab-ci.yml

    - name: Check Gitlab Provider
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === "gitlab.com" }} 
      action: fs:delete
      input:
        files:
          - ./.github
    

    - id: publish
      name: Publish in github
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "github.com" }}  
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: EKS Cluster ${{ parameters.eks_cluster_name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}

    - id: publish
      name: Publish in gitlab
      if: ${{ (parameters.repoUrl | parseRepoUrl).host  === "gitlab.com"  }} 
      action: publish:gitlab
      input:
        allowedHosts: ["gitlab.com"]
        description: EKS Cluster ${{ parameters.eks_cluster_name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}
    
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
        
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
  
  