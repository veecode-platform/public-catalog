apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-ecs-template
  title: AWS ECS Template
  description: AWS ECS Template using Terraform and Github Actions
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - platform-templates
    - ecs
    - aws
    - terraform
spec:
  owner: veecode/platform
  type: devops
  parameters:
    - title: Information for using the catalog
      required:
        - componentId
        - owner
      properties:
        componentId:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: Help others understand what this component is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component (Devportal)
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group]
        applicationPort:
          title: Application Port
          type: string
          description: Name of the project
          default: "5000"

    - title: Aws Configuration
      properties:
        awsVpc:
            title: What network structure will this automation need?
            type: string
            description: We will need a VPC , or something similar...
        awsRegion:
          title: Aws Region
          type: string
          description: Specifies the AWS region
          default: 'us-east-1'
          enum:
            - 'us-east-2'
            - 'us-east-1'
            - 'us-west-1'
            - 'us-west-2'
          enumNames:
            - 'US East (Ohio)'
            - 'US East (N. Virginia)'
            - 'US West (N. California)'
            - 'US West (Oregon)'
        subnet_ids:
            title: Set the subnet ids
            type: array
            items:
              type: string    

    - title: Terraform Configuration
      required:
        - terraformStateBucketName
        - terraformStateBucketRegion
      properties:
        terraformStateBucketName:
          title: Terraform State Bucket Name
          type: string
          description: Specifies your Terraform State Bucket

        terraformStateBucketRegion:
          title: Bucket Region
          type: string
          description: Specifies the Terraform State Bucket region
          default: 'us-east-1'
          enum:
            - 'us-east-2'
            - 'us-east-1'
            - 'us-west-1'
            - 'us-west-2'
          enumNames:
            - 'US East (Ohio)'
            - 'US East (N. Virginia)'
            - 'US West (N. California)'
            - 'US West (Oregon)'
        terraformTags:
          title: Tags
          type: object
          properties:
            tags:
              title: Want to set tags for your project?
              type: string
              enum:
              - default
              - custom
              enumNames:
              - 'No'
              - 'Yes'
              default: default
          dependencies:
            tags:
                oneOf:
                - properties:
                   tags:
                     enum:
                        - default          
                - properties:
                    tags:
                      enum:
                        - custom
                    project_tags:
                      title: Insert a Tag
                      type: array
                      ui:help: Write using camelCase or separate words using "-"
                      items:
                        type: string  

    - title: Spec Configuration
      required:
        - specPublish
        - specPublishBranch
      description: Define which repository your spec will be published in
      properties:
        specPublishBranch:
                  title: Branch name
                  type: string
                  description: the spec will be added to this branch
        specPublish:
          type: string
          ui:field: RepoUrlSelector
          ui:options:
            allowedHosts:
              - github.com

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          description: Choose a location to create the RDS Pipeline
          ui:field: RepoUrlSelector
          ui:options:
            allowedHosts:
              - github.com
        visibility:
          title: Repository visibility
          type: string
          enum:
            - public
            - private
          enumNames:
            - 'Public'
            - 'Private'
          default: private

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton      
        values:
          componentId: ${{ parameters.componentId }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          username: ${{ parameters.username }}
          password: ${{ parameters.password }}
          instance_name: ${{ parameters.instance_name }}
          instance_type: ${{ parameters.instance_type }}
          terraformStateBucketName: ${{ parameters.terraformStateBucketName }}
          destination: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          terraformStateBucketRegion: ${{ parameters.terraformStateBucketRegion }}
    
    - name: Check Infracost
      if: ${{ parameters.infracost === false }}
      action: fs:delete
      input:
        files: 
          - ./.github/workflows/infracost.yml

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: RDS Name ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}
    
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
  
  
