apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: expressjs-template
  title: ExpressJs Template
  description: NodeJs Template using Github Actions.
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - platform-templates
    - node
    - aws
    - github
spec:
  owner: veecode/platform
  type: service
  parameters:
    - title: Project Configuration
      required:
        - componentId
        - owner
      properties:
        componentId:
          title: Name
          type: string
          description: Unique name of the component
          pattern: '^([a-z0-9]|[.]|[_]|[-])*$'
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: Help others understand what this component is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component (Devportal)
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group]
        applicationPort:
            title: Application Port
            type: string
            default: "5000"

    - title: Database Configuration
      properties:
        database_window:
          title: Are you going to use a database?
          type: object
          properties:
            database_window_mode:
              title: "Select a database of your choice"  
              type: string
              enum:
              - default
              - custom
              enumNames:
              - 'None'
              - 'Choose a database'
              default: default
          dependencies:
            database_window_mode:
                oneOf:
                - properties:
                   database_window_mode:
                     enum:
                        - default          
                - properties:
                    database_window_mode:
                      enum:
                        - custom
                    databaseResource:
                      title: Select a Database from our catalog
                      type: object
                      ui:field: ResourcePicker
                      ui:options:
                        catalogFilter:
                          kind: [Database]
    - title: Ingress Configuration
      required:
        - ingress
      properties:
        ingress:
          title: Choosee your ingress-controller
          type: string
          enum:
            - kong
            - ngnix
          enumNames:
            - 'kong'
            - 'ngnix'
          default: kong

    - title: Docker Registry
      properties:
        docker_window:
          title: Select a docker host
          type: object
          properties:
            docker_window_mode:
              title: "Select a host of your choice"  
              type: string
              enum:
              - default
              - custom
              enumNames:
              - 'Docker Hub'
              - 'Generic'
              default: default
            docker_organization:
              title: "Enter your organization"
              type: string
          dependencies:
            docker_window_mode:
                oneOf:
                - properties:
                   docker_window_mode:
                     enum:
                        - default          
                - properties:
                    docker_window_mode:
                      enum:
                        - custom
                    docker_generic:
                      title: Insert a Generic host
                      type: string

    - title: Cluster Settings
      properties:
        clusterResource:
          title: Select a Cluster from our catalog
          type: object
          ui:field: ResourcePicker
          ui:options:
            catalogFilter:
              kind: [Cluster]

    - title: Spec Configuration
      required:
        - specPublish
        - specPublishBranch
      description: Define which repository your spec will be published in
      properties:
        specPublishBranch:
                  title: Branch name
                  type: string
                  description: the spec will be added to this branch
        specPublish:
          type: string
          ui:field: RepoUrlSelector
          ui:options:
            allowedHosts:
              - github.com
        specTags:
          title: Tags
          type: object
          properties:
            tags:
              title: Want to set tags for your spec?
              type: string
              enum:
              - default
              - custom
              enumNames:
              - 'No'
              - 'Yes'
              default: default
          dependencies:
            tags:
                oneOf:
                - properties:
                   tags:
                     enum:
                        - default          
                - properties:
                    tags:
                      enum:
                        - custom
                    project_tags:
                      title: Insert a Tag
                      type: array
                      ui:help: Write using camelCase or separate words using "-"
                      items:
                        type: string  

        # mockserverUrl:
        #   title: Mockserver URL
        #   type: string
        #   description: 'Insert your mockerser host. ex.: https://mockserver.apr.vee.codes'
        #   default: ''

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          description: Choose a location to create the Express Project
          ui:field: RepoUrlSelector
          ui:options:
            allowedHosts:
              - github.com
        visibility:
          title: Repository visibility
          type: string
          enum:
            - public
            - private
          enumNames:
            - 'Public'
            - 'Private'
          default: private

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton      
        values:
          componentId: ${{ parameters.componentId }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          port: ${{ parameters.applicationPort}}
          docker_window: ${{ parameters.docker_window.docker_window_mode }}
          docker_organization: ${{ parameters.docker_window.docker_organization }}
          docker_generic: ${{ parameters.docker_window.docker_generic }}
          repoUrl: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}/${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          host: ${{ parameters.repoUrl | parseRepoUrl | pick('host') }}
          mockserverUrl: ${{ parameters.mockserverUrl }}  
          exportKongKubernetes: ${{ parameters.exportKongKubernetes }}
          specPublish: ${{ parameters.specPublish | parseRepoUrl | pick('owner') }}/${{ parameters.specPublish | parseRepoUrl | pick('repo') }}
          specPublishRepo: ${{ (parameters.specPublish | parseRepoUrl).repo }}
          specPublishBranch: ${{ parameters.specPublishBranch }}
          specTags: ${{ parameters.specTags }}
          cluster_name: ${{ parameters.clusterResource.name }}
          domain: ${{ parameters.clusterResource.domain }}
          cluster_type: ${{ parameters.clusterResource.cluster_type }}
          cluster_public_ip: ${{ parameters.clusterResource.public_ip }}
          use_database: ${{ parameters.database_window.database_window_mode }}
          database_host: ${{ parameters.databaseResource.endpoint }} 
          database_name: ${{ parameters.databaseResource.name }} 
          database_user: ${{ parameters.databaseResource.name }} # not used in db entity
          database_password: ${{ parameters.databaseResource.database_password }} # vault
          database_port: ${{ parameters.databaseResource.database_port') }} # not used in db entity
          ingress: ${{ parameters.ingress}}

    - name: Check Database
      if: ${{ parameters.database_window.database_window_mode === "default" }} 
      action: fs:delete
      input:
        files: 
          - ./src/database.js
   
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: ECS Name ${{ parameters.componentId }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}
    
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"
        
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
  
  
